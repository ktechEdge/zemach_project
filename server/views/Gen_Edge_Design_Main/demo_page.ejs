<%- include ("page_top.ejs") %>

<div class="plant-container">
    <% for (let row = 0; row < 12; row++) { %>
        <% for (let col = 0; col < 6; col++) { %>
            <div id="<%= row %>,<%= col %>" class="grid-item device-<%= col + 1 %>"></div>
        <% } %>
    <% } %>
</div>

<script>
    const letters = ['A', 'B', 'C', 'D', 'E', 'F'];

    document.querySelectorAll('.grid-item').forEach((item) => {
        const [row, col] = item.id.split(',').map(Number);
        const className = letters[col] + (row + 1);
        item.classList.add(className);
        item.textContent = className;
    });

    // Function to fetch device statuses from an API
    function fetchDeviceStatuses() {
        return fetch('/api/device/status')
            .then(response => response.json())
            .then(data => data.devices); // Assuming data is structured like { devices: [{ id: 1, status: 'ok' }, ...] }
    }

    // Function to change the colors of the grids based on the fetched info
    function updateGridColors() {
        fetchDeviceStatuses()
            .then(devices => {
                devices.forEach(device => {
                    const deviceClass = `.device-${device.id}`;
                    const statusClass = device.status; // 'ok', 'disconnected', 'problem'

                    // Remove existing status classes from grid items of this device
                    document.querySelectorAll(deviceClass).forEach(item => {
                        item.classList.remove('ok', 'disconnected', 'problem');
                        item.classList.add(statusClass);
                    });
                });
            })
            .catch(error => {
                console.error('Error fetching device statuses:', error);
            });
    }
    updateGridColors();
</script>

<%- include ("page_bottom.ejs") %>
